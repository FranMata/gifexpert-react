{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFletchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","propType","PropType","func","isRequired","getGif","categories","a","url","encodeURI","fetch","resp","json","data","arrayGif","map","img","id","title","urlGif","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","load","state","setstate","useEffect","then","useFletchGifs","console","log","key","GifExpertApp","category","ReactDOM","render","document","getElementById"],"mappings":"wOAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,aAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,4BAAKD,GACL,2BACIQ,KAAK,OACLC,MAAOT,EACPU,SAnBW,SAACP,GACpBF,EAAcE,EAAEQ,OAAOF,YAwB/BZ,EAAYe,SAAS,CACjBd,c,OAAee,EAASC,KAAKC,Y,2BCjCpBC,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEZC,EAFY,0FAE8EC,UAAUH,GAFxF,sBAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAWD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,OAAM,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBb,QAV/B,kBAcXM,GAdW,4CAAH,sDCENQ,EAAc,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OAChC,OACI,yBAAKI,UAAU,QACX,yBAAKC,IAAKL,EAAQM,IAAOP,IACzB,2BAAKA,KCDJQ,EAAU,SAAC,GAAkB,IAAjBpB,EAAgB,EAAhBA,WAAgB,ECFZ,SAACA,GAAgB,IAAD,EAEflB,mBAAS,CAC/ByB,KAAM,GACNc,MAAM,IAJ+B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAiBzC,OATAC,qBAAU,WACNzB,EAAOC,GAAYyB,MAAK,SAACf,GACpBa,EAAS,CACNhB,KAAMG,EACNW,MAAM,SAGf,CAACrB,IAEGsB,EDbqBI,CAAc1B,GAA9Bc,EAFyB,EAE9BP,KAAac,EAFiB,EAEjBA,KAGpB,OADJM,QAAQC,IAAId,GAEJ,oCACI,4BAAKd,GAEHqB,GAAQ,wCAEV,yBAAKJ,UAAU,aAEPH,EAAOL,KAAI,SAAAC,GAAG,OACd,kBAAC,EAAD,eAAamB,IAAOnB,EAAIC,IAAQD,UEgBrCoB,EA3BM,WAAK,IAAD,EAEehD,mBAAS,CAAC,cAFzB,mBAEdkB,EAFc,KAEFnB,EAFE,KASrB,OACI,oCACI,4CACA,6BAEA,kBAAC,EAAD,CAAaA,cAAiBA,IAE9B,4BAEQmB,EAAWS,KAAI,SAAAsB,GAAQ,OACnB,kBAAC,EAAD,CAASF,IAAOE,EAAU/B,WAAc+B,U,MCtBhEC,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.95509c6f.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropType from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('Buscar...');    \r\n    \r\n    const handleAddValue = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length > 0){\r\n            setCategories((cate) => [inputValue, ...cate]);\r\n            setInputValue('');            \r\n        }\r\n    }\r\n\r\n    return (                \r\n        <form onSubmit={handleSubmit}>\r\n            <h1>{inputValue}</h1>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleAddValue}                   \r\n            />                                \r\n        </form>                    \r\n    )\r\n}\r\n\r\nAddCategory.propType={\r\n    setCategories: PropType.func.isRequired\r\n}","export const getGif = async(categories) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=0bHhxFv5KUPyCeD42RZ28DiDtOk9Y1zj&q=${ encodeURI(categories) }&limit=10`;\r\n    const resp = await fetch(url); //hace la peticion HTTP\r\n    const {data} = await resp.json(); //pasa los datos  a formato json\r\n\r\n    const arrayGif = data.map(img =>{\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                urlGif: img.images?.downsized_medium.url\r\n            }\r\n        }            \r\n    )\r\n    return arrayGif;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, urlGif}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={urlGif} alt = {title}/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFletchGifs } from '../hooks/useFletchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categories}) => {\r\n\r\n    const {data:images, load} = useFletchGifs(categories);\r\n    \r\nconsole.log(images);\r\n    return (\r\n        <>        \r\n            <h3>{categories}</h3>\r\n\r\n            { load && <h2>Cargando</h2> }\r\n\r\n            <div className=\"card-grid\">                        \r\n                {\r\n                    images.map(img =>(\r\n                    <GifGridItem key = {img.id} {...img}/>\r\n                    ))\r\n                }                            \r\n             </div>\r\n        </>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\nexport const useFletchGifs = (categories) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        load: true\r\n    });\r\n    \r\n\r\n    useEffect(() => {\r\n        getGif(categories).then((img) => \r\n            {setstate({\r\n                data: img,\r\n                load: false\r\n            })}\r\n        )\r\n    }, [categories]);\r\n    \r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\n\r\n//COMPONENTES\r\nimport { AddCategory } from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid'\r\n\r\n\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    //CODIGO DE REFERENCIA\r\n    // const handleAdd = ()=>{\r\n    //     setCategories([...categories, 'HunterXHunter']);\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            <h1>GifExpertApp</h1>\r\n            <hr/>\r\n\r\n            <AddCategory setCategories = {setCategories}/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category=>\r\n                        <GifGrid key = {category} categories = {category}/>                    \r\n                )}\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}